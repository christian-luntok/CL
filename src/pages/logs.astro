---
import Layout from '@layouts/MainLayout.astro';
<<<<<<< HEAD
<<<<<<< HEAD
import LogItem from '@components/LogItem.astro';
import Layout from '@layouts/MainLayout.astro';
import { DateTime } from 'Luxon';
import _ from 'lodash';
import moment from 'moment';
=======
import { DateTime } from 'Luxon';
import LogItem from '@components/LogItem.astro';
>>>>>>> d66a6c6 (Update: Changes within the Logs and sorting of log items.)
=======
import LogItem from '@components/LogItem.astro';
import { DateTime } from 'Luxon';
import _ from 'lodash';
import moment from 'moment';
>>>>>>> d1326cb (Addition: Trying to add lodash and moment as date converter and trying out lodash array grouping functionality)

const allLogs = await Astro.glob('./logs/*.md');

const sortLogsByDate = allLogs.sort((a,b) => {
	const beforeDate = DateTime.fromFormat(a.frontmatter.compareDate, 'd/MM/yyyy');
	const afterDate = DateTime.fromFormat(b.frontmatter.compareDate, 'd/MM/yyyy');
	// return beforeDate < afterDate ? -1 : beforeDate > afterDate ? 1 : 0;
	return afterDate - beforeDate;
});

const groupLogsbyMonth = function( logsObj ) {
	const objPeriod = {};
	logsObj.map( (log, index ) => {
		const date = DateTime.fromFormat(log.frontmatter.compareDate, 'd/MM/yyyy');
		const month = date.toFormat('MMMM') + " " + date.toFormat('yyyy');

		// date = ( date.toFormat('yyyy') - 1970 ) * ( 12 + date.toFormat('MM'));
		// var year = (date.toFormat('yyyy') - 1970 );
		// var month = ( parseInt(date.toFormat('MM')) + 12);
<<<<<<< HEAD
<<<<<<< HEAD
		// objPeriod[month] = objPeriod[month] || [];
		// objPeriod[month].push(logsObj[index]);

		// if ( !objPeriod['month'][month] ) {
		// 	objPeriod['month'][month] = [log.frontmatter.title];
		// } else {
		// 	objPeriod['month'][month].push(log.frontmatter.title);
		// }

		if ( !objPeriod[month] ) {
			objPeriod[month] = [log];
		} else {
			objPeriod[month].push(log);
		}
		// August: [ {posts1} , {post2} ]
=======
		objPeriod[month] = objPeriod[month] || [];
		objPeriod[month].push(logsObj[index]);
>>>>>>> d66a6c6 (Update: Changes within the Logs and sorting of log items.)
=======
		// objPeriod[month] = objPeriod[month] || [];
		// objPeriod[month].push(logsObj[index]);

		// if ( !objPeriod['month'][month] ) {
		// 	objPeriod['month'][month] = [log.frontmatter.title];
		// } else {
		// 	objPeriod['month'][month].push(log.frontmatter.title);
		// }

		if ( !objPeriod[month] ) {
			objPeriod[month] = [log];
		} else {
			objPeriod[month].push(log);
		}
<<<<<<< HEAD
>>>>>>> ca181f1 (Update: Initial update to separate the posts per month)
=======
		// August: [ {posts1} , {post2} ]
>>>>>>> d1326cb (Addition: Trying to add lodash and moment as date converter and trying out lodash array grouping functionality)
	});
	return objPeriod;
}

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> d1326cb (Addition: Trying to add lodash and moment as date converter and trying out lodash array grouping functionality)
const groupedByMonthMoment = _(sortLogsByDate)
	.groupBy( log => moment(log.frontmatter.compareDate).format('d/MM/yyyy') )
	.mapValues( log => _.map( console.log(log) ) )
	.value();

console.log(groupedByMonthMoment);

<<<<<<< HEAD
const groupedByMonth = groupLogsbyMonth(sortLogsByDate);

console.log( groupedByMonth );

// for (var i in groupedByMonth ) {
// 		if ( groupedByMonth.hasOwnProperty(i) ) {
// 			console.log(groupedByMonth+'->'+groupedByMonth[i]);
// 		}
// }

=======
const groupedByMonth = groupLogsbyMonth(sortLogsByDate);

<<<<<<< HEAD
>>>>>>> d66a6c6 (Update: Changes within the Logs and sorting of log items.)
=======
console.log(groupedByMonth);
=======
const groupedByMonth = groupLogsbyMonth(sortLogsByDate);

console.log( groupedByMonth );
// for (var i in groupedByMonth ) {
// 		if ( groupedByMonth.hasOwnProperty(i) ) {
// 			console.log(groupedByMonth+'->'+groupedByMonth[i]);
// 		}
// }
>>>>>>> d1326cb (Addition: Trying to add lodash and moment as date converter and trying out lodash array grouping functionality)

>>>>>>> ca181f1 (Update: Initial update to separate the posts per month)
---
<Layout title="Logs 📝" description="Collection of logs that I'm putting within the website!">
	<div class="latest-logs text-grey dark:text-white flex flex-col section-wrapper justify-center px-8 pt-0 pb-8 sm:px-3">
		<h2 class="text-xl mb-8">Logs</h2>
		<div class="logs">
			{
				sortLogsByDate.map( (logItem) => 
					<LogItem title={logItem.frontmatter.title} tags={logItem.frontmatter.tags} linkUrl={logItem.url} date={logItem.frontmatter.date} />
				)
			}
		</div>
		<!-- /.logs -->
	</div>
	<!-- /.latest-logs -->
</Layout>
